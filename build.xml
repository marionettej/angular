<?xml version="1.0" encoding="utf-8"?>
<project name="angluar" default="build" xmlns:artifact="urn:maven-artifact-ant">

	<property environment="env" />
	<property file="./build.properties" />

	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpath="${build.lib}/maven-ant-tasks-2.1.3.jar" />

	<import file="${build}/target.xml" />
		
	<target name="build">
		<antcall target="build-local" />
	</target>

	<target name="build-local" 
		depends="
			copy-dependency,
			copy-config" />

	<!-- ### 로컬 환경 초기화 ### -->
	<target name="local-clean">
		<echo message="로컬 환경 초기화 " />
		<delete includeemptydirs="true" failonerror="no" verbose="true">
			<fileset dir="${classes}" includes="**/*" excludes="*.class" />
			<fileset dir="${lib}" includes="**/*" />
			<fileset dir="${webinf}" excludes="web.xml" />
		</delete>
	</target>

	<!--### 의존 라이브러리 복사 ###-->
	<target name="copy-dependency">
		<echo message="의존 라이브러리 복사" />
		<echo message="${user.home}" />
		<artifact:dependencies filesetId="dependency.fileset">
			<pom file="pom.xml" />
		</artifact:dependencies>
		<copy todir="${lib}" flatten="true" verbose="true">
			<fileset refid="dependency.fileset"/>
		</copy>
	</target>

	<!--### 설정 파일 복사 ###-->
	<target name="copy-config">
		<echo message="설정 파일 복사" />
		<copy todir="${classes}" encoding="UTF-8" verbose="true">
			<fileset dir="${conf}" includes="**/*" excludes="web.xml" />
			<fileset dir="${conf}" includes="*/*" excludes="web.xml" />
			<fileset dir="${build}" includes="mybatis-config.xml" />
			<fileset dir="${src.main}" includes="**/*.xml, **/*.properties" />
		</copy>
	</target>

	<!--### JAR 생성 ###-->
	<target name="make-jar">
		<echo message="JAR 생성" />
		<jar destfile="${lib}/${project.name}.jar" basedir="${classes}" />
	</target>

	<!--### 클래스 파일 삭제 ###-->
	<target name="delete-class">
		<echo message="클래스 파일 삭제" />
		<delete>
			<fileset dir="${classes}" includes="**/*" excludes="log4j.server.*" />
		</delete>
	</target>

	<!--### 컴퍼넌트 배포 ###-->
	<target name="svr-deploy">
		<echo message="컴퍼넌트 배포" />
		<copy todir="${deploy}">
			<fileset dir="${web}" />
		</copy>
	</target>

</project>